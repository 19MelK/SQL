/*Working with a dataset called chinook, which represents a digital media store
 and includes tables for artists, albums, media tracks, invoices, and customers. */

/*Query joining multiple tables to compare how many songs of each genre were ordered in each country*/


SELECT invoices.BillingCountry, genres.Name, COUNT(invoice_items.Quantity)
FROM chinook.artists
JOIN chinook.albums
ON artists.Artistid=albums.Artistid
JOIN chinook.tracks
ON albums.Albumid=tracks.Albumid
JOIN chinook.genres
ON genres.Genreid=tracks.Genreid
JOIN chinook.invoice_items
ON tracks.Trackid=invoice_items.Trackid
JOIN chinook.invoices
ON invoice_items.Invoiceid=invoices.Invoiceid
GROUP BY invoices.BillingCountry, genres.Name
ORDER BY invoices.BillingCountry, genres.Name;


/*Query joining multiple tables, aggregating data and using CASE expression
to return values showing each sales employee's yearly sales totals, 
rounded to 2 decimal places, over 5 years of data.*/

SELECT  employees.FirstName, employees.LastName, ROUND(SUM(invoices.Total),2) AS 'yearly sales totals',
CASE
    WHEN  invoices.InvoiceDate LIKE  '2009%' THEN "2009 sales total"
    WHEN invoices.InvoiceDate LIKE  '2010%' THEN "2010 sales total"
    WHEN  invoices.InvoiceDate LIKE  '2011%' THEN "2011 sales total"
    WHEN invoices.InvoiceDate LIKE  '2012%' THEN "2012 sales total"
    ELSE "2013 sales total"
END AS "year"
FROM chinook.invoices
JOIN chinook.customers
ON invoices.Customerid=customers.CustomerId
JOIN chinook.employees
ON customers.SupportRepid=employees.Employeeid
GROUP BY  "year", employees.LastName ;


/* Query using aggregation to return 5 year sales totals by country.*/

SELECT billingCountry,
ROUND(SUM(invoices.Total),2) as 'total 5 year sales by country'
FROM invoices
GROUP BY billingCountry;


/* Query using JOINs and aggregate functions to return total number of tracks sold and total sales for each artist
rounded to 2 decimal places.
Ordered from most to least tracks sold.*/

SELECT COUNT(invoice_items.Trackid) AS 'tracks sold', artists.Name AS 'Artist', 
ROUND(SUM(invoice_items.UnitPrice),2)*Quantity AS 'Total sales'
FROM chinook.invoice_items
JOIN chinook.tracks
ON invoice_items.Trackid=tracks.TrackID
JOIN chinook.albums
ON tracks.AlbumId=albums.AlbumId
JOIN chinook.artists
ON albums.ArtistId=artists.ArtistId
GROUP BY artists.Name
ORDER BY COUNT(invoice_items.Trackid) desc;



/* Query using JOINS and aggregation to return the 10 best selling tracks from the
artist with the most tracks sold.*/

SELECT COUNT(invoice_items.Trackid) AS 'tracks sold', artists.Name AS 'Artist', tracks.Name,
ROUND(SUM(invoice_items.UnitPrice),2)*Quantity AS 'Total sales'
FROM chinook.invoice_items
JOIN chinook.tracks
ON invoice_items.Trackid=tracks.TrackID
JOIN chinook.albums
ON tracks.AlbumId=albums.AlbumId
JOIN chinook.artists
ON albums.ArtistId=artists.ArtistId
WHERE artists.Name LIKE '%Iron Maiden%'
GROUP BY tracks.Name
ORDER BY COUNT(invoice_items.Trackid) desc
LIMIT 10;


/*Query using JOINS and aggregation across multiple tables
 to return the number of tracks sold by Media type.*/

SELECT COUNT(invoice_items.Trackid) AS 'tracks sold', media_types.Name AS Media_type
FROM chinook.invoice_items
JOIN chinook.tracks
ON invoice_items.Trackid=tracks.TrackId
JOIN chinook.media_types
ON tracks.MediaTypeid=media_types.MediaTypeId
GROUP BY Media_type;



/* Query using JOINS and aggregation across multiple tables
to return the number of tracks sold by genre.*/

SELECT COUNT(invoice_items.Trackid) AS 'tracks sold', genres.Name AS Genre
FROM chinook.invoice_items
JOIN chinook.tracks
ON invoice_items.Trackid=tracks.TrackId
JOIN chinook.genres
ON tracks.Genreid=genres.GenreId
GROUP BY genres.Name
